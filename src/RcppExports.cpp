// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// demo_chatty1
void demo_chatty1();
RcppExport SEXP _classExamples_demo_chatty1() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    demo_chatty1();
    return R_NilValue;
END_RCPP
}
// demo_chatty2
void demo_chatty2(int n);
RcppExport SEXP _classExamples_demo_chatty2(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    demo_chatty2(n);
    return R_NilValue;
END_RCPP
}
// demo_chatty3
void demo_chatty3(int n);
RcppExport SEXP _classExamples_demo_chatty3(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    demo_chatty3(n);
    return R_NilValue;
END_RCPP
}
// demo_chatty4
void demo_chatty4(int n, bool reserve);
RcppExport SEXP _classExamples_demo_chatty4(SEXP nSEXP, SEXP reserveSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< bool >::type reserve(reserveSEXP);
    demo_chatty4(n, reserve);
    return R_NilValue;
END_RCPP
}
// demo_chatty5
void demo_chatty5(int n, bool reserve);
RcppExport SEXP _classExamples_demo_chatty5(SEXP nSEXP, SEXP reserveSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< bool >::type reserve(reserveSEXP);
    demo_chatty5(n, reserve);
    return R_NilValue;
END_RCPP
}
// demo_chatty6
void demo_chatty6(int n, bool reserve);
RcppExport SEXP _classExamples_demo_chatty6(SEXP nSEXP, SEXP reserveSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< bool >::type reserve(reserveSEXP);
    demo_chatty6(n, reserve);
    return R_NilValue;
END_RCPP
}
// demo_chatty7
void demo_chatty7(int n);
RcppExport SEXP _classExamples_demo_chatty7(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    demo_chatty7(n);
    return R_NilValue;
END_RCPP
}
// demo_derivation_1
List demo_derivation_1(NumericVector x);
RcppExport SEXP _classExamples_demo_derivation_1(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(demo_derivation_1(x));
    return rcpp_result_gen;
END_RCPP
}
// demo_derivation_2
List demo_derivation_2(NumericVector x);
RcppExport SEXP _classExamples_demo_derivation_2(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(demo_derivation_2(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_classExamples_demo_chatty1", (DL_FUNC) &_classExamples_demo_chatty1, 0},
    {"_classExamples_demo_chatty2", (DL_FUNC) &_classExamples_demo_chatty2, 1},
    {"_classExamples_demo_chatty3", (DL_FUNC) &_classExamples_demo_chatty3, 1},
    {"_classExamples_demo_chatty4", (DL_FUNC) &_classExamples_demo_chatty4, 2},
    {"_classExamples_demo_chatty5", (DL_FUNC) &_classExamples_demo_chatty5, 2},
    {"_classExamples_demo_chatty6", (DL_FUNC) &_classExamples_demo_chatty6, 2},
    {"_classExamples_demo_chatty7", (DL_FUNC) &_classExamples_demo_chatty7, 1},
    {"_classExamples_demo_derivation_1", (DL_FUNC) &_classExamples_demo_derivation_1, 1},
    {"_classExamples_demo_derivation_2", (DL_FUNC) &_classExamples_demo_derivation_2, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_classExamples(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
